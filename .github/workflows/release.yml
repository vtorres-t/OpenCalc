name: Release

on:
  pull_request_target:
    types:
      - closed
    branches:
      - main
  workflow_dispatch: # Manual trigge

jobs:
    build:
        name: Release
        runs-on: ubuntu-latest

        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v5

            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: '17'
                  distribution: 'temurin'

            - name: Cache Gradle
              uses: actions/cache@v3
              with:
                path: |
                  ~/.gradle/caches
                  ~/.gradle/wrapper
                key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                restore-keys: |
                  ${{ runner.os }}-gradle

            - name: Grant execute permission for gradlew
              run: chmod +x gradlew

            - name: Run Unit Tests
              run: ./gradlew testDebugUnitTest --no-daemon

            - name: Run Lint
              run: ./gradlew lint

            - name: Generate App Version Name
              id: version
              run: echo "VERSION_NAME=$(git describe --tags | sed 's/\(.*\)-/\1./' | sed 's/\(.*\)-/\1+/')" >> $GITHUB_ENV
                
            - name: Bump Version
              uses: chkfung/android-version-actions@v1.1
              with:
                gradlePath: app/build.gradle.kts
                versionCode: ${{ github.run_number }}
                versionName: ${{ steps.version.outputs.VERSION_NAME }}

            - name: Build release APK
              run: ./gradlew assembleRelease -PSIGNING_KEY_ALIAS=$SIGNING_KEY_ALIAS -PKEYSTORE_PASSWORD=$KEYSTORE_PASSWORD -PKEYSTORE_FILE=app/key -PSIGNING_KEY_PASSWORD=$SIGNING_KEY_PASSWORD
            
            - name: Get release file apk path
              id: releaseApk
              run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT

            - name: Upload Release APK
              uses: actions/upload-artifact@v4
              with:
                name: release-apk
                path: ${{ steps.releaseApk.outputs.apkfile }}

            - name: Generate Release Notes
              id: generate-release-notes
              uses: actions/github-script@v7
              with:
                github-token: ${{ github.token }}
                result-encoding: string
                script: |
                  const { data } = await github.rest.repos.generateReleaseNotes({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    tag_name: 'v${{ inputs.version }}',
                    target_commitish: '${{ github.sha }}',
                    previous_tag_name: '${{ steps.previous-release.outputs.tag_name }}',
                  })
                  return data.body

            - name: Create release
              id: create_release
              uses: actions/create-release@v1
              with:
                release_name: v${{ env.VERSION_NAME }}
                tag_name: v${{ env.VERSION_NAME }}
                draft: false
                prerelease: false
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload Release APK
              id: upload_release_asset
              uses: actions/upload-release-asset@v1.0.1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                upload_url: ${{ steps.create_release.outputs.upload_url }}
                asset_path: ${{ steps.releaseApk.outputs.apkfile }}
                asset_name: OpenCalc_v${{ env.VERSION_NAME }}.apk
                asset_content_type: application/zip
